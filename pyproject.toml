[build-system]
requires = ["setuptools>=68", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
# Using default package layout at repository root.

[tool.setuptools.packages.find]
where = ["."]
include = ["ff*"]
[project]
name = "ff"
version = "0.1.0"
description = "Sleeper weekly reports (modular)"
requires-python = ">=3.11"
dependencies = [
  "requests>=2.32.0",
]

[project.optional-dependencies]
dev = [
  "pytest>=8.3",
  "openapi-spec-validator>=0.7",
  "PyYAML>=6.0",
  "black>=24.0.0",
  "ruff>=0.5.0",
  "mypy>=1.10",
  "pre-commit>=3.7",
  "types-requests>=2.32.0.20240712",
]

[project.scripts]
weekly-report = "ff.cli.weekly_report:main"
ff-answers = "ff.api.answers:main"

[tool.black]
line-length = 100
target-version = ["py311"]
extend-exclude = '''
(
  ^reports/weekly/
  | ^openapi/
)
'''

[tool.ruff]
line-length = 100
src = ["ff", "."]
exclude = [
  ".venv",
  "__pycache__",
  ".mypy_cache",
  ".ruff_cache",
  ".pytest_cache",
  "reports/weekly",
  "openapi",
]

[tool.ruff.lint]
select = [
  "E",   # pycodestyle errors
  "F",   # pyflakes
  "W",   # pycodestyle warnings
  "I",   # isort (import sorting)
  "B",   # flake8-bugbear
  "UP",  # pyupgrade
]
ignore = [
  "E501", # line length (handled by Black; allow long docstrings)
  "I001", # import sorting initial state; will auto-fix via pre-commit
  "B007", # unused loop variable in dict iteration; to be addressed later
  "UP035", # deprecated typing aliases; to be modernized incrementally
]

[tool.ruff.lint.isort]
combine-as-imports = true
known-first-party = ["scripts", "ff"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_ignores = true
disallow_untyped_defs = true
check_untyped_defs = true
no_implicit_optional = true
strict_equality = true
ignore_missing_imports = true
exclude = "(^\\.|^build/|^dist/|^reports/|^openapi/|^__pycache__/|^\\.venv/|^tests/__pycache__/|^python/)"
files = ["ff"]
explicit_package_bases = true
mypy_path = "."
