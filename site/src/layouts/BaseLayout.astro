---
import Footer from '../components/Footer.astro';
export interface Props {
  title: string;
  description?: string;
}

const { title, description = 'Foulk ’n Football - Where Family Rivalries Meet Fantasy Glory' } = Astro.props;
const currentPath = Astro.url.pathname;
const BASE = import.meta.env.BASE_URL || '/';
---

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta name="description" content={description}>
  <title>{title} | Foulk ’n Football</title>
  <link rel="icon" type="image/png" href={`${BASE}FoulknFootball.png`}>
  <link rel="preconnect" href="https://fonts.googleapis.com">
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
  <link href="https://fonts.googleapis.com/css2?family=Playfair+Display:wght@400;700;900&display=swap" rel="stylesheet">
  <link rel="stylesheet" href={`${BASE}styles/foulknfootball-theme.css`}>
  <style>
    /* Tailwind Reset */
    *, ::before, ::after {
      box-sizing: border-box;
      border-width: 0;
      border-style: solid;
      border-color: #e5e7eb;
    }

    html {
      line-height: 1.5;
      -webkit-text-size-adjust: 100%;
      -moz-tab-size: 4;
      tab-size: 4;
    }

    body {
      margin: 0;
      line-height: inherit;
    }

    /* Container */
    .container {
      width: 100%;
      max-width: 1280px;
      margin: 0 auto;
      padding: 0 1rem;
    }

    /* Logo sizing: header logo kept modest; footer logo constrained to avoid huge rendering */
    .fff-logo-image {
      height: 48px;
      width: auto;
      display: inline-block;
      vertical-align: middle;
    }

    .fff-footer-logo {
      display: block;
      max-width: 220px; /* reasonable max for desktop */
      width: 35%; /* scale down on larger screens */
      height: auto;
      margin: 0.5rem auto; /* center in footer */
    }

    @media (max-width: 768px) {
      .fff-footer-logo {
        max-width: 140px;
        width: 45%;
        margin-top: 0.5rem;
      }
      .fff-logo-image {
        height: 40px;
      }
    }
  </style>
</head>
<body>
  <header class="fff-header backdrop-blur-md bg-white/60 dark:bg-gray-900/60 sticky top-0 z-50">
    <div class="container mx-auto flex justify-between items-center py-3 px-4">
      <a href={BASE} class="fff-logo-container">
  <img src={`${BASE}FoulknFootball.png`} alt="Foulk ’n Football Logo" class="fff-logo-image">
  <span class="fff-logo-text">Foulk ’n Football</span>
      </a>

      <nav class="flex gap-6 text-sm font-semibold">
        <a href="/ff/" class="nav-link" class:list={[Astro.url.pathname === '/' && 'is-active']}>Home</a>
        <a href="/ff/seasons/2025" class="nav-link" class:list={[Astro.url.pathname.startsWith('/seasons/2025') && 'is-active']}>Current&nbsp;Season</a>
        <a href="/ff/seasons" class="nav-link" class:list={[Astro.url.pathname.startsWith('/seasons') && 'is-active']}>History</a>
      </nav>

      <button class="fff-theme-toggle" id="theme-toggle" aria-label="Toggle theme">
        <span class="theme-icon" style="font-size: 1.25rem;">🌙</span>
      </button>
    </div>
  </header>

  <main>
    <slot />
  </main>

  <Footer />

  <script>
    // Theme toggle with better persistence
    const themeToggle = document.getElementById('theme-toggle');
    const themeIcon = themeToggle?.querySelector('.theme-icon');

    function setTheme(isDark) {
      if (isDark) {
        document.documentElement.classList.add('dark');
        if (themeIcon) themeIcon.textContent = '☀️';
      } else {
        document.documentElement.classList.remove('dark');
        if (themeIcon) themeIcon.textContent = '🌙';
      }
      localStorage.setItem('theme', isDark ? 'dark' : 'light');
    }

    // Initialize theme
    const savedTheme = localStorage.getItem('theme');
    const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;
    setTheme(savedTheme === 'dark' || (!savedTheme && prefersDark));

    themeToggle?.addEventListener('click', () => {
      const isDark = document.documentElement.classList.contains('dark');
      setTheme(!isDark);
    });
  </script>
</body>
</html>
