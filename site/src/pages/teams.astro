---
import BaseLayout from '../layouts/BaseLayout.astro';

// Import league data
let leagueData;
try {
  leagueData = await import('../data/league-data.json').then(m => m.default);
} catch (error) {
  leagueData = { seasons: {}, family: { dads: [], sons: [] } };
}

// Sample team/owner data (would be fetched from Sleeper API)
const teams = [
  {
    username: 'robfoulk',
    displayName: 'Rob',
    teamName: 'Team Rob',
    family: 'Dad',
    joinedYear: 2014,
    championships: [2021, 2019],
    playoffAppearances: 8,
    totalWins: 78,
    totalLosses: 43,
    avatar: '🏈',
    motto: 'Experience beats youth',
    favoritePlayer: 'Cooper Kupp',
    draftStrategy: 'RB heavy, WR depth',
    achievements: ['Regular Season Leader 2024', 'Championship 2021', 'Championship 2019'],
    stats: {
      bestSeason: { year: 2021, record: '13-1', points: 1987.4 },
      worstSeason: { year: 2020, record: '6-8', points: 1456.3 },
      avgPoints: 162.3,
      favoritePosition: 'RB'
    }
  },
  {
    username: 'jfoulkrod',
    displayName: 'Jake',
    teamName: 'Team Jake',
    family: 'Son',
    joinedYear: 2016,
    championships: [2023, 2020],
    playoffAppearances: 6,
    totalWins: 72,
    totalLosses: 49,
    avatar: '⚡',
    motto: 'The future is now',
    favoritePlayer: 'Justin Jefferson',
    draftStrategy: 'Best player available',
    achievements: ['Youngest Champion', 'Highest Single Season Points', 'Best Waiver Pickup (2023)'],
    stats: {
      bestSeason: { year: 2023, record: '11-3', points: 1923.1 },
      worstSeason: { year: 2017, record: '4-10', points: 1387.2 },
      avgPoints: 159.8,
      favoritePosition: 'WR'
    }
  },
  {
    username: 'Evenkeel75',
    displayName: 'Brian',
    teamName: 'Team Brian',
    family: 'Dad',
    joinedYear: 2014,
    championships: [2018],
    playoffAppearances: 5,
    totalWins: 58,
    totalLosses: 63,
    avatar: '⚔️',
    motto: 'Every battle is won before it begins',
    favoritePlayer: 'Derrick Henry',
    draftStrategy: 'Power running game',
    achievements: ['Most Consistent', 'Best Team Name', 'Clutch Playoff Performer'],
    stats: {
      bestSeason: { year: 2018, record: '12-2', points: 1834.7 },
      worstSeason: { year: 2022, record: '3-11', points: 1298.5 },
      avgPoints: 155.2,
      favoritePosition: 'RB'
    }
  },
  {
    username: 'Dbfoulkrod',
    displayName: 'Devin',
    teamName: 'Team Devin',
    family: 'Son',
    joinedYear: 2017,
    championships: [2022],
    playoffAppearances: 4,
    totalWins: 64,
    totalLosses: 57,
    avatar: '🎯',
    motto: 'Precision over power',
    favoritePlayer: 'Josh Allen',
    draftStrategy: 'QB first, stack offense',
    achievements: ['Best Rookie Season', 'Most Trades', 'Comeback Player of Year (2022)'],
    stats: {
      bestSeason: { year: 2022, record: '10-4', points: 1756.8 },
      worstSeason: { year: 2018, record: '5-9', points: 1423.1 },
      avgPoints: 157.1,
      favoritePosition: 'QB'
    }
  },
  {
    username: 'asmartaleck1',
    displayName: 'Dave',
    teamName: 'Team Dave',
    family: 'Dad',
    joinedYear: 2014,
    championships: [2017],
    playoffAppearances: 6,
    totalWins: 69,
    totalLosses: 52,
    avatar: '🌟',
    motto: 'Steady hands, steady wins',
    favoritePlayer: 'Travis Kelce',
    draftStrategy: 'Balanced approach',
    achievements: ['Most Playoff Wins', 'Best Regular Season Record (2021)', 'Waiver Wire Wizard'],
    stats: {
      bestSeason: { year: 2021, record: '13-1', points: 2043.7 },
      worstSeason: { year: 2019, record: '4-10', points: 1367.9 },
      avgPoints: 158.9,
      favoritePosition: 'TE'
    }
  },
  {
    username: 'mafoulk',
    displayName: 'Michael',
    teamName: 'Team Michael',
    family: 'Son',
    joinedYear: 2018,
    championships: [],
    playoffAppearances: 3,
    totalWins: 54,
    totalLosses: 67,
    avatar: '🚀',
    motto: 'Still learning, still hungry',
    favoritePlayer: 'Ja\'Marr Chase',
    draftStrategy: 'Youth movement',
    achievements: ['Most Improved', 'Best Sleeper Pick', 'Future Champion'],
    stats: {
      bestSeason: { year: 2023, record: '9-5', points: 1645.2 },
      worstSeason: { year: 2019, record: '2-12', points: 1156.8 },
      avgPoints: 151.4,
      favoritePosition: 'WR'
    }
  },
  {
    username: 'ebmookie',
    displayName: 'Eric',
    teamName: 'Team Eric',
    family: 'Dad',
    joinedYear: 2015,
    championships: [],
    playoffAppearances: 2,
    totalWins: 45,
    totalLosses: 76,
    avatar: '🎲',
    motto: 'Chaos is a ladder',
    favoritePlayer: 'Christian McCaffrey',
    draftStrategy: 'High risk, high reward',
    achievements: ['Most Creative Lineups', 'Biggest Upsets', 'Never Give Up Award'],
    stats: {
      bestSeason: { year: 2021, record: '8-6', points: 1598.4 },
      worstSeason: { year: 2022, record: '2-12', points: 1234.7 },
      avgPoints: 148.3,
      favoritePosition: 'RB'
    }
  },
  {
    username: 'NOTDoda',
    displayName: 'Dakota',
    teamName: 'Team Dakota',
    family: 'Son',
    joinedYear: 2019,
    championships: [],
    playoffAppearances: 1,
    totalWins: 41,
    totalLosses: 80,
    avatar: '🌪️',
    motto: 'The storm is coming',
    favoritePlayer: 'Kyler Murray',
    draftStrategy: 'Speed kills',
    achievements: ['Most Potential', 'Best Late Round Pick', 'Future Star'],
    stats: {
      bestSeason: { year: 2023, record: '7-7', points: 1534.6 },
      worstSeason: { year: 2020, record: '1-13', points: 1087.3 },
      avgPoints: 146.8,
      favoritePosition: 'QB'
    }
  }
];

// Sort teams by championships, then by win percentage
const sortedTeams = teams.sort((a, b) => {
  if (a.championships.length !== b.championships.length) {
    return b.championships.length - a.championships.length;
  }
  const aWinPct = a.totalWins / (a.totalWins + a.totalLosses);
  const bWinPct = b.totalWins / (b.totalWins + b.totalLosses);
  return bWinPct - aWinPct;
});

// Family groupings
const dads = sortedTeams.filter(team => team.family === 'Dad');
const sons = sortedTeams.filter(team => team.family === 'Son');

// Helper function to calculate win percentage
const getWinPercentage = (wins, losses) => {
  return ((wins / (wins + losses)) * 100).toFixed(1);
};
---

<BaseLayout title="Teams" description="Meet the owners and teams of FoulkNFootball">
  <div class="space-y-8">
    <!-- Page Header -->
    <div class="text-center">
      <h1 class="text-5xl font-bold mb-4">👥 Teams</h1>
      <p class="text-xl text-gray-600 dark:text-gray-400">
        Meet the legends behind the league
      </p>
    </div>

    <!-- Family Battle Overview -->
    <section class="bg-gradient-to-r from-blue-50 to-red-50 dark:from-blue-900/20 dark:to-red-900/20 p-8 rounded-lg">
      <h2 class="text-3xl font-bold mb-6 text-center">⚔️ Dads vs Sons</h2>
      
      <div class="grid md:grid-cols-2 gap-8">
        <div class="text-center">
          <h3 class="text-2xl font-bold text-blue-600 dark:text-blue-400 mb-4">👨 The Dads</h3>
          <div class="bg-white dark:bg-gray-800 p-4 rounded-lg">
            <p class="text-3xl font-bold">{dads.reduce((sum, dad) => sum + dad.championships.length, 0)}</p>
            <p class="text-sm text-gray-600 dark:text-gray-400">Total Championships</p>
          </div>
        </div>
        
        <div class="text-center">
          <h3 class="text-2xl font-bold text-red-600 dark:text-red-400 mb-4">👦 The Sons</h3>
          <div class="bg-white dark:bg-gray-800 p-4 rounded-lg">
            <p class="text-3xl font-bold">{sons.reduce((sum, son) => sum + son.championships.length, 0)}</p>
            <p class="text-sm text-gray-600 dark:text-gray-400">Total Championships</p>
          </div>
        </div>
      </div>
    </section>

    <!-- Championship Hall of Fame -->
    <section>
      <h2 class="text-3xl font-bold mb-6 text-yellow-600 dark:text-yellow-400">🏆 Championship Hall of Fame</h2>
      <div class="grid md:grid-cols-2 lg:grid-cols-3 gap-6">
        {sortedTeams.filter(team => team.championships.length > 0).map(team => (
          <div class="bg-gradient-to-br from-yellow-50 to-amber-50 dark:from-yellow-900/20 dark:to-amber-900/20 p-6 rounded-lg border-2 border-yellow-200 dark:border-yellow-800">
            <div class="text-center mb-4">
              <div class="text-4xl mb-2">{team.avatar}</div>
              <h3 class="text-xl font-bold">{team.displayName}</h3>
              <p class="text-sm text-gray-600 dark:text-gray-400">{team.teamName}</p>
            </div>
            
            <div class="space-y-2">
              <div class="flex justify-between">
                <span>Championships:</span>
                <span class="font-bold">{team.championships.length} 🏆</span>
              </div>
              <div class="text-xs text-gray-600 dark:text-gray-400">
                {team.championships.join(', ')}
              </div>
              <div class="flex justify-between">
                <span>Win Rate:</span>
                <span class="font-bold">{getWinPercentage(team.totalWins, team.totalLosses)}%</span>
              </div>
            </div>
          </div>
        ))}
      </div>
    </section>

    <!-- All Teams -->
    <section>
      <h2 class="text-3xl font-bold mb-6">📋 Complete Roster</h2>
      <div class="grid lg:grid-cols-2 gap-6">
        {sortedTeams.map(team => (
          <div class={`p-6 rounded-lg shadow-lg ${team.family === 'Dad' ? 'bg-blue-50 dark:bg-blue-900/20 border-2 border-blue-200 dark:border-blue-800' : 'bg-red-50 dark:bg-red-900/20 border-2 border-red-200 dark:border-red-800'}`}>
            <!-- Team Header -->
            <div class="flex items-center mb-4">
              <div class="text-5xl mr-4">{team.avatar}</div>
              <div class="flex-1">
                <h3 class="text-2xl font-bold">{team.displayName}</h3>
                <p class="text-lg text-gray-600 dark:text-gray-400">{team.teamName}</p>
                <p class="text-sm">
                  <span class={`px-2 py-1 rounded-full text-xs font-bold ${team.family === 'Dad' ? 'bg-blue-200 text-blue-800' : 'bg-red-200 text-red-800'}`}>
                    {team.family}
                  </span>
                  <span class="ml-2 text-gray-500">Since {team.joinedYear}</span>
                </p>
              </div>
            </div>

            <!-- Team Stats -->
            <div class="grid grid-cols-3 gap-4 mb-4">
              <div class="text-center">
                <p class="text-2xl font-bold text-yellow-600">{team.championships.length}</p>
                <p class="text-xs text-gray-600 dark:text-gray-400">Championships</p>
              </div>
              <div class="text-center">
                <p class="text-2xl font-bold text-green-600">{getWinPercentage(team.totalWins, team.totalLosses)}%</p>
                <p class="text-xs text-gray-600 dark:text-gray-400">Win Rate</p>
              </div>
              <div class="text-center">
                <p class="text-2xl font-bold text-blue-600">{team.playoffAppearances}</p>
                <p class="text-xs text-gray-600 dark:text-gray-400">Playoffs</p>
              </div>
            </div>

            <!-- Team Info -->
            <div class="space-y-2 text-sm">
              <div class="flex justify-between">
                <span class="text-gray-600 dark:text-gray-400">Record:</span>
                <span class="font-mono">{team.totalWins}-{team.totalLosses}</span>
              </div>
              <div class="flex justify-between">
                <span class="text-gray-600 dark:text-gray-400">Avg Points:</span>
                <span class="font-mono">{team.stats.avgPoints}</span>
              </div>
              <div class="flex justify-between">
                <span class="text-gray-600 dark:text-gray-400">Favorite Player:</span>
                <span>{team.favoritePlayer}</span>
              </div>
              <div class="flex justify-between">
                <span class="text-gray-600 dark:text-gray-400">Draft Strategy:</span>
                <span>{team.draftStrategy}</span>
              </div>
            </div>

            <!-- Motto -->
            <div class="mt-4 p-3 bg-white dark:bg-gray-800 rounded italic text-center">
              "{team.motto}"
            </div>

            <!-- Achievements -->
            <div class="mt-4">
              <h4 class="font-bold mb-2 text-sm">🏅 Achievements</h4>
              <div class="flex flex-wrap gap-1">
                {team.achievements.map(achievement => (
                  <span class="bg-gray-200 dark:bg-gray-700 px-2 py-1 rounded text-xs">
                    {achievement}
                  </span>
                ))}
              </div>
            </div>

            <!-- Best/Worst Seasons -->
            <div class="mt-4 grid grid-cols-2 gap-4 text-xs">
              <div class="bg-green-100 dark:bg-green-900/20 p-2 rounded">
                <h5 class="font-bold text-green-800 dark:text-green-300">Best Season</h5>
                <p>{team.stats.bestSeason.year}: {team.stats.bestSeason.record}</p>
                <p>{team.stats.bestSeason.points} pts</p>
              </div>
              <div class="bg-red-100 dark:bg-red-900/20 p-2 rounded">
                <h5 class="font-bold text-red-800 dark:text-red-300">Worst Season</h5>
                <p>{team.stats.worstSeason.year}: {team.stats.worstSeason.record}</p>
                <p>{team.stats.worstSeason.points} pts</p>
              </div>
            </div>
          </div>
        ))}
      </div>
    </section>

    <!-- Team Stats Summary -->
    <section class="bg-gray-50 dark:bg-gray-900 p-8 rounded-lg">
      <h2 class="text-3xl font-bold mb-6">📊 League Statistics</h2>
      
      <div class="grid md:grid-cols-4 gap-6">
        <div class="text-center">
          <h3 class="text-xl font-bold mb-2">Most Championships</h3>
          <div class="bg-white dark:bg-gray-800 p-4 rounded">
            <p class="text-2xl font-bold text-yellow-600">{Math.max(...teams.map(t => t.championships.length))}</p>
            <p class="text-sm">{teams.find(t => t.championships.length === Math.max(...teams.map(t => t.championships.length)))?.displayName}</p>
          </div>
        </div>
        
        <div class="text-center">
          <h3 class="text-xl font-bold mb-2">Highest Win Rate</h3>
          <div class="bg-white dark:bg-gray-800 p-4 rounded">
            <p class="text-2xl font-bold text-green-600">
              {Math.max(...teams.map(t => parseFloat(getWinPercentage(t.totalWins, t.totalLosses))))}%
            </p>
            <p class="text-sm">
              {teams.find(t => parseFloat(getWinPercentage(t.totalWins, t.totalLosses)) === Math.max(...teams.map(t => parseFloat(getWinPercentage(t.totalWins, t.totalLosses)))))?.displayName}
            </p>
          </div>
        </div>
        
        <div class="text-center">
          <h3 class="text-xl font-bold mb-2">Most Playoff Apps</h3>
          <div class="bg-white dark:bg-gray-800 p-4 rounded">
            <p class="text-2xl font-bold text-blue-600">{Math.max(...teams.map(t => t.playoffAppearances))}</p>
            <p class="text-sm">{teams.find(t => t.playoffAppearances === Math.max(...teams.map(t => t.playoffAppearances)))?.displayName}</p>
          </div>
        </div>
        
        <div class="text-center">
          <h3 class="text-xl font-bold mb-2">League Veteran</h3>
          <div class="bg-white dark:bg-gray-800 p-4 rounded">
            <p class="text-2xl font-bold text-purple-600">{Math.min(...teams.map(t => t.joinedYear))}</p>
            <p class="text-sm">Since {Math.min(...teams.map(t => t.joinedYear))}</p>
          </div>
        </div>
      </div>
    </section>
  </div>
</BaseLayout>

<style>
  .team-card {
    transition: transform 0.2s ease;
  }
  
  .team-card:hover {
    transform: translateY(-2px);
  }
</style>
